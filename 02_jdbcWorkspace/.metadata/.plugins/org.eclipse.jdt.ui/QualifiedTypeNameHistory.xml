<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="jdbc.step1.test.JDBC4StepTest"/>
    <fullyQualifiedTypeName name="javax.naming.directory.DirContext"/>
    <fullyQualifiedTypeName name="java.util.Properties"/>
    <fullyQualifiedTypeName name="java.io.FileInputStream"/>
    <fullyQualifiedTypeName name="com.encore.test.SimplePersonJDBCTest"/>
    <fullyQualifiedTypeName name="com.encore.dao.EmployeeDAO"/>
    <fullyQualifiedTypeName name="com.encore.dao.impl.EmployeeDAOImpl"/>
    <fullyQualifiedTypeName name="java.security.Provider.Service"/>
    <fullyQualifiedTypeName name="java.awt.Toolkit"/>
    <fullyQualifiedTypeName name="com.encore.dao.BookDAO"/>
    <fullyQualifiedTypeName name="java.lang.IncompatibleClassChangeError"/>
    <fullyQualifiedTypeName name="java.lang.ClassNotFoundException"/>
    <fullyQualifiedTypeName name="javax.management.remote.rmi._RMIConnectionImpl_Tie"/>
    <fullyQualifiedTypeName name="com.encore.dao.impl.BookDAOImpl"/>
    <fullyQualifiedTypeName name="java.awt.print.Book"/>
    <fullyQualifiedTypeName name="com.encore.vo.Book"/>
    <fullyQualifiedTypeName name="com.encore.exception.DuplicateISBNException"/>
    <fullyQualifiedTypeName name="java.util.Scanner"/>
    <fullyQualifiedTypeName name="com.encore.exception.BookNOTFoundException"/>
    <fullyQualifiedTypeName name="java.lang.Character"/>
    <fullyQualifiedTypeName name="java.util.concurrent.ArrayBlockingQueue"/>
    <fullyQualifiedTypeName name="com.encore.exception.InvalidInputException"/>
    <fullyQualifiedTypeName name="broker.twotier.dao.DatabaseTemplate"/>
    <fullyQualifiedTypeName name="broker.twotier.test.DatabaseTest"/>
    <fullyQualifiedTypeName name="java.sql.DriverManager"/>
    <fullyQualifiedTypeName name="config.ServerInfo"/>
    <fullyQualifiedTypeName name="broker.twotier.exception.DuplicateSSNException"/>
    <fullyQualifiedTypeName name="java.util.Vector"/>
    <fullyQualifiedTypeName name="broker.twotier.vo.SharesRec"/>
    <fullyQualifiedTypeName name="javax.naming.spi.DirStateFactory.Result"/>
    <fullyQualifiedTypeName name="broker.twotier.vo.CustomerRec"/>
    <fullyQualifiedTypeName name="java.sql.Connection"/>
    <fullyQualifiedTypeName name="java.sql.PreparedStatement"/>
    <fullyQualifiedTypeName name="java.sql.ResultSet"/>
    <fullyQualifiedTypeName name="broker.twotier.exception.InvalidTransactionException"/>
    <fullyQualifiedTypeName name="broker.twotier.exception.RecordNotFoundException"/>
    <fullyQualifiedTypeName name="java.sql.SQLException"/>
    <fullyQualifiedTypeName name="java.net.Socket"/>
    <fullyQualifiedTypeName name="java.io.Serializable"/>
    <fullyQualifiedTypeName name="java.lang.ArrayIndexOutOfBoundsException"/>
    <fullyQualifiedTypeName name="broker.three.exception.DuplicateSSNException"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="java.lang.Process"/>
    <fullyQualifiedTypeName name="broker.three.server.ProtocolHandler"/>
    <fullyQualifiedTypeName name="javax.print.attribute.standard.Severity"/>
    <fullyQualifiedTypeName name="java.net.ServerSocket"/>
    <fullyQualifiedTypeName name="broker.three.server.Database"/>
    <fullyQualifiedTypeName name="java.nio.channels.WritableByteChannel"/>
    <fullyQualifiedTypeName name="broker.three.exception.RecordNotFoundException"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="java.io.ObjectInputStream"/>
    <fullyQualifiedTypeName name="java.io.ObjectOutputStream"/>
    <fullyQualifiedTypeName name="broker.three.shares.Result"/>
    <fullyQualifiedTypeName name="broker.three.exception.InvalidTransactionException"/>
    <fullyQualifiedTypeName name="broker.three.shares.Command"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="broker.three.vo.CustomerRec"/>
    <fullyQualifiedTypeName name="java.lang.Runnable"/>
    <fullyQualifiedTypeName name="java.lang.Thread"/>
    <fullyQualifiedTypeName name="broker.three.client.TickerTape"/>
</qualifiedTypeNameHistroy>
